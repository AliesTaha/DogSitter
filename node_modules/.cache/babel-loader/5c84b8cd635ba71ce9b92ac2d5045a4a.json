{"ast":null,"code":"/**\r\n * Removes event handlers from the given object.\r\n * A field is considered an event handler if it is a function with a name beginning with `on`.\r\n *\r\n * @param object Object to remove event handlers from.\r\n * @returns Object with event handlers removed.\r\n */\nexport default function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","map":{"version":3,"names":["omitEventHandlers","object","undefined","result","Object","keys","filter","prop","match","forEach"],"sources":["C:/Users/Karl/Documents/HackTheNorth/node_modules/@mui/base/utils/omitEventHandlers.js"],"sourcesContent":["/**\r\n * Removes event handlers from the given object.\r\n * A field is considered an event handler if it is a function with a name beginning with `on`.\r\n *\r\n * @param object Object to remove event handlers from.\r\n * @returns Object with event handlers removed.\r\n */\r\nexport default function omitEventHandlers(object) {\r\n  if (object === undefined) {\r\n    return {};\r\n  }\r\n\r\n  const result = {};\r\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\r\n    result[prop] = object[prop];\r\n  });\r\n  return result;\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC;EAChD,IAAIA,MAAM,KAAKC,SAAf,EAA0B;IACxB,OAAO,EAAP;EACD;;EAED,MAAMC,MAAM,GAAG,EAAf;EACAC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA2BC,IAAI,IAAI,EAAEA,IAAI,CAACC,KAAL,CAAW,UAAX,KAA0B,OAAOP,MAAM,CAACM,IAAD,CAAb,KAAwB,UAApD,CAAnC,EAAoGE,OAApG,CAA4GF,IAAI,IAAI;IAClHJ,MAAM,CAACI,IAAD,CAAN,GAAeN,MAAM,CAACM,IAAD,CAArB;EACD,CAFD;EAGA,OAAOJ,MAAP;AACD"},"metadata":{},"sourceType":"module"}